<%@ page trimDirectiveWhitespaces="true"%>
<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%@ taglib uri="/struts-tags" prefix="s"%>
<%
    String path = request.getContextPath();
            String basePath = request.getScheme() + "://"
                    + request.getServerName() + ":" + request.getServerPort()
                    + path;
    pageContext.setAttribute("base", basePath);
%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <title>工资报表</title>
    <link href="../template/system/css/base.css" rel="stylesheet" type="text/css" />
    <link href="../template/miniui/themes/other/skin.css" rel="stylesheet" type="text/css" />
    <link href="../template/plugin/public/css/tablepub.css" rel="stylesheet" type="text/css" />
    <script src="../template/miniui/boot.js" type="text/javascript"></script>
    <script src="../template/plugin/public/list.js" type="text/javascript"></script>
</head>

<body>
    <div class="mini-splitter" style="width:100%;height:100%;" borderStyle="border:0">
        <div size="16%" showCollapseButton="true">
            <div class="mini-toolbar" style="padding:2px;border-top:0;border-left:0;border-right:0;">
                <span style="padding-left:5px;">组织机构：</span>
            </div>
            <div class="mini-fit" style=" border-top:0;">
                <ul id="deptree" class="mini-tree" url="../basis/branch!getTreeListByUser.action" style="width:100%;height:100%;"
                    showTreeIcon="true" textField="name" idField="id" parentField="pid" resultAsTree="false" expandOnLoad="true">
                </ul>
            </div>
        </div>
        <div showCollapseButton="true">
             <div class="mini-toolbar" style="padding:0px;border-top:0;">
                <table style="width:100%;">
                    <tr>
                        <td style="width:100%;">
                            &nbsp;姓名:
                            <input class="mini-textbox" id="name" onenter="onKeyEnter"/>
                            &nbsp;薪酬期间:
                            <input class="mini-textbox" id="payPeriod" style="width: 100px" onenter="onKeyEnter"/>
                            &nbsp;薪资项目:
                            <div class="mini-combobox" id="salaryItem" popupWidth="180" textField="name" style="width:180px"
                                url="../salary/salary_items!getSalaryItemListData.action" multiSelect="true" onenter="onKeyEnter">
                                <div property="columns">
                                    <div header="薪资项目" field="name"></div>
                                </div>
                            </div>
                            <a id="searchButton" class="mini-button" iconCls="icon-search" onclick="searchS()">查询</a>
                            <a class="mini-button" iconCls="icon-download"
                                onclick="exportExcelData('salary', 'salary_report','name,payPeriod,salaryItem','name,payPeriod,salaryItem')">导出</a>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="mini-fit">
                <div id="grid1" class="mini-datagrid" style="width:100%;height:100%;" pageSize="20"
                    allowAlternating="true" idField="id" allowResize="false" allowHeaderWrap="true">
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        mini.parse();
        var grid1 = mini.get("grid1");
        var salaryItem = mini.get("salaryItem");
        var payPeriod = mini.get("payPeriod");
        payPeriod.setValue(mini.formatDate(new Date(), "yyyy年M月"));
        var tree = mini.get("deptree");
        tree.on("nodeselect", function (e) {
            var node = tree.getSelectedNode();
            if (node) {
                if(document.getElementById("searchButton")){ 
                    $("#searchButton").click();
                }else { 
                    var ids = "";
                    if(tree){
                        var node = tree.getSelectedNode();
                        if(node){
                            var ids = "";
                            ids = depAll(ids,tree,node);
                        }
                    }
                    grid1.load({ searchData:"{\"depId\":\""+ids+"\"}" });
                }
            } else {
                grid1.setData([]);
                grid1.setTotalCount(0);
            }
        });

        $(function() {
            searchS();
        });
        function searchS() {
            dynamicTable('name,payPeriod,salaryItem','name,payPeriod,salaryItem');
        }

        function searchCondition(name,attr) {
            var names=name.split(",");
            var attrs=attr.split(",");
            var searchData="{";
            for(var i=0;i<names.length;i++){
                if(mini.get(names[i])){
                    var value=mini.get(names[i]).getValue();
                    if(value!=null&&value!=""&&typeof(value)!=undefined){
                        searchData=searchData+"\""+attrs[i]+"\""+":\""+value+"\",";
                    }
                }
            }
            var cd = searchData.length;//长度
            var fy = searchData.charAt(cd-1);
            if(fy==","){
                searchData = searchData.substring(0,cd-1);
            }
            if(tree){
                var node = tree.getSelectedNode();
                if(node){
                    var ids = "";
                    ids = depAll(ids,tree,node);
                    if (searchData == "{"){
                        searchData=searchData+"\"depId\":\""+ids+"\"";
                    } else {
                        searchData=searchData+",\"depId\":\""+ids+"\"";
                    }
                }
            }
            searchData=searchData+"}";
    
            return searchData;
        }
        function depAll(ids,tree,node){
            if(node.flg==1){
                ids += node.id;
                return ids;
            }else{
                var list = tree.getChildNodes(node);
                if(list.length>0){
                	ids = list[0].id;
                    for ( var i = 1; i < list.length; i++) {
                           if(list[i].flg==1){
                               ids += "," + list[i].id;
                           }else{
                               node = list[i];
                               ids = depAll(ids,tree,node);
                           }
                    }
                }
                return ids;
            }
        }

        /**
         * 动态列
         * zhanghj
         */
        function dynamicTable(name,attr) {
            var ss = searchCondition(name,attr);
            window.parent.loading();
            $.ajax({
                url: "../salary/salary_report!getSlaryReportListData.action",
                type: "POST",
                data : {
                    searchData : ss
                },
                success: function(text) {
                    window.parent.unmask();
                    var gridData = mini.decode(text);
                    var jsonData = gridData.data;
                    var arr = [];
                    arr.push({ type: "indexcolumn", headerAlign:"center", width: 40,header: "序列"});
                    arr.push({ field: "id", id:"id", name:"id", headerAlign:"center", width: 40});
                    arr.push({ field: "staffId", id:"staffId", name:"staffId", headerAlign:"center", header: "员工ID"});
                    arr.push({ field:"jobNumber", width:"80", headerAlign:"center", align:"center", header: "工号"});
                    arr.push({ field:"name", width:"100", headerAlign:"center", align:"center", header: "姓名"});
                    arr.push({ field:"companyName", width:"100", headerAlign:"center", align:"center", header: "公司"});
                    arr.push({ field:"deptName", width:"100", headerAlign:"center", align:"center", header: "部门"});
                    arr.push({ field:"payPeriod", width:"80", headerAlign:"center", align:"center", header: "薪酬期间"});

                    // 遍历选中的薪资项目
                    var choseItems = [];
                    var itemsValue = salaryItem.getValue().split(",");
                    var itemsText = salaryItem.getText().split(",");
                    for (var i =0; i< itemsValue.length;i++) {
                        choseItems[itemsValue[i]] = 0;
                        arr.push({ field: itemsValue[i], width:"80", headerAlign:"center", align:"center", header: itemsText[i]});
                    }

                    // 遍历数据
                    var table = [];
                    for (var i=0; i< jsonData.length;i++) {
                        var row = jsonData[i];
                        var column = {id: row.id, staffId: row.staffId, jobNumber: row.jobNumber, name: row.name, companyName: row.companyName,
                        		deptName: row.deptName, payPeriod: row.payPeriod};
                        var objs = eval(column);
                        var newObjs = $.extend({}, objs, choseItems);
                        if (row.itemsId != null) {
                            var itemsId = row.itemsId.split(",");
                            var charge = row.charge.split(",");
                            for (var j=0; j< itemsId.length;j++) {
                                var aField = itemsId[j];
                                newObjs[aField] = charge[j];
                            }
                        }
                        table.push(newObjs);
                    }
                    grid1.setData(table);
                    grid1.set({columns : arr});
                    grid1.hideColumn("id");
                    grid1.hideColumn("staffId");
                    grid1.frozenColumns(0, 7);
                    grid1.setTotalCount(jsonData.length);
                }
            });
        }

        /**导出
         * a:包名
         * b:类名
         * name:所有查询条件框的name字符串
         * attr:所有查询条件的属性名
         * action方法名:export
         * */
        function exportExcelData(a, b, name, attr) {
            var search = mini.decode(searchCondition(name,attr));
            search.itemName = salaryItem.getText();
            var searchData = encodeURI(mini.encode(search));
            window.location.href="../"+a+"/"+b+"!export.action?searchData="+searchData;
        }
    </script>
</body>
</html>