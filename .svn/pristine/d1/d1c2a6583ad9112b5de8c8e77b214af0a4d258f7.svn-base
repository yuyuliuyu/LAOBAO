package com.lingnet.hcm.action.salary;

import javax.annotation.Resource;

import org.hibernate.criterion.Restrictions;

import com.lingnet.common.action.BaseAction;
import com.lingnet.hcm.entity.salary.Perioddata;
import com.lingnet.hcm.entity.salary.SalaryAssignation;
import com.lingnet.hcm.entity.salary.SalaryGroupWage;
import com.lingnet.hcm.service.salary.SalaryAssignationService;
import com.lingnet.util.JsonUtil;
import com.lingnet.util.LingUtil;

/**
 * 薪酬核算
 * @ClassName: SalaryQuotaAction 
 * @Description: 薪酬核算 
 * @author zhanghj
 * @date 2017年3月15日 上午9:39:21 
 *
 */
public class SalaryQuotaAction extends BaseAction {

    private static final long serialVersionUID = 8601228601683546158L;
    private String salaryPeriodText;// 薪酬期间文本
    private String salaryWageName;// 工资套名称
    private String companyId;// 公司ID
    private String assignStaffId;// 薪酬核算数据主表ID
    private String assignId;// 薪酬核算数据薪资中间表ID
    private String columns;// 薪资列集合
    private String formula;// 公式
    private String itemID;// 薪资ID
    private SalaryAssignation salaryAssignation;

    @Resource(name="salaryAssignationService")
    private SalaryAssignationService salaryAssignationService;

    /**
     * @Title: 列表展现页 
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年3月6日 V 1.0
     */
    public String list() {
        return "list";
    }

    /**
     * @Title: 列表增加页 
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年3月6日 V 1.0
     */
    public String add() {
        return "add";
    }

    /**
     * @Title: 每月薪酬总额上报展现页 
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年3月6日 V 1.0
     */
    public String allocation() {
        return "allocation";
    }

    /**
     * @Title: 工资分配过程
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年3月6日 V 1.0
     */
    public String process() {
        // 获取登录用户所在公司
        companyId = LingUtil.userinfo().getCid();

        return "process";
    }

    /**
     * @Title: 增加薪酬分配过程
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年3月6日 V 1.0
     */
    public String processadd() {
        return "processadd";
    }

    /**
     * @Title: 编辑薪酬分配过程
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年3月6日 V 1.0
     */
    public String processEdit() {
        salaryAssignation = getBeanByCriteria(SalaryAssignation.class, Restrictions.eq("id", id), Restrictions.eq("isDelete", 0));
        if (salaryAssignation != null) {
            companyId = salaryAssignation.getCompanyId();
            Perioddata perioddata = getBeanByCriteria(Perioddata.class, Restrictions.eq("id", salaryAssignation.getSalaryPeriod()));
            if (perioddata != null) {
                salaryPeriodText = perioddata.getName();
                SalaryGroupWage groupWage = getBeanByCriteria(SalaryGroupWage.class, Restrictions.eq("id", salaryAssignation.getSalaryGroupId()));
                if (groupWage != null) {
                    salaryWageName = groupWage.getName();
                }
            }
        }
        return "processadd";
    }

    /**
     * @Title: 薪酬区间选择
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年5月10日 V 1.0
     */
    public String payPeriodSelector() {
        return "payPeriodSelector";
    }

    /**
     * @Title: 薪酬核算数据展现页
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年3月6日 V 1.0
     */
    public String processData() {
        return "processdata";
    }

    /**
     * @Title: 薪酬核算数据修改页
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年3月6日 V 1.0
     */
    public String adjust() {
        return "adjust";
    }

    /**
     * @Title: 工资审批发放
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年3月6日 V 1.0
     */
    public String check() {
        return "check";
    }

    /**
     * @Title: 审核展示页
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年3月6日 V 1.0
     */
    public String checkData() {
        return "checkdata";
    }

    /**
     * @Title: 审核意见
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年3月6日 V 1.0
     */
    public String audit() {
        return "audit";
    }

    /**
     * @Title: 公式选择
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年5月12日 V 1.0
     */
    public String financial() {
        return "financial";
    }

    /**
     * @Title: 保存或者更新分配过程
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年3月6日 V 1.0
     */
    public String saveOrUpdate() {
        try {
            return ajax(Status.success, salaryAssignationService.saveOrUpdate(formdata));
        } catch (Exception e) {
            return ajax(Status.error, e.getMessage());
        }
    }

    /**
     * @Title: 获取分配过程
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年5月10日 V 1.0
     */
    public String getSalaryAssignationListData() {
        return ajax(Status.success, JsonUtil.Encode(salaryAssignationService.getSalaryAssignationListData(companyId, searchData, pager)));
    }

    /**
     * @Title: 删除分配过程
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年5月10日 V 1.0
     */
    public String remove() {
        try {
            return ajax(Status.success, salaryAssignationService.remove(ids));
        } catch (Exception e) {
            return ajax(Status.error, e.getMessage());
        }
    }

    /**
     * @Title: 删除分配核算数据
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年5月10日 V 1.0
     */
    public String removeForAssign() {
        try {
            return ajax(Status.success, salaryAssignationService.removeForAssign(ids));
        } catch (Exception e) {
            return ajax(Status.error, e.getMessage());
        }
    }

    /**
     * @Title: 获取已经分配的员工薪资项目数据
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年5月10日 V 1.0
     */
    public String getAssignationForStaffData() {
        return ajax(Status.success, JsonUtil.Encode(salaryAssignationService.getAssignationForStaffData(id, ids, searchData)));
    }

    /**
     * @Title: 重新初始化员工发放数据
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年5月10日 V 1.0
     */
    public String updateAssignationForStaffData() {
        try {
            return ajax(Status.success, salaryAssignationService.updateAssignationForStaffData(id));
        } catch (Exception e) {
            return ajax(Status.error, e.getMessage());
        }
    }

    /**
     * @Title: 重新计算
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年5月10日 V 1.0
     */
    public String updateReCalculateStaffsItem() {
        return ajax(Status.success, salaryAssignationService.updateReCalculateStaffsItem(assignStaffId, assignId, id));
    }

    /**
     * @Title: 更新已经选中的员工薪资项目值
     * void 
     * @author zhanghj
     * @since 2017年5月11日 V 1.0
     */
    public String updateSelectStaffSalaryData() {
        try {
            return ajax(Status.success, salaryAssignationService.updateSelectStaffSalaryData(griddata, columns));
        } catch (Exception e) {
            return ajax(Status.error, e.getMessage());
        }
    }

    /**
     * @Title: 获取薪资组工资套中薪资项目关联的公式
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年5月12日 V 1.0
     */
    public String getAllGroupWageFinancialList() {
        return ajax(Status.success, JsonUtil.Encode(salaryAssignationService.getAllGroupWageFinancialList(assignStaffId, id)));
    }

    /**
     * @Title: 根据默认公式计算薪资项目的值
     * @return 
     * String 
     * @author zhanghj
     * @since 2017年5月10日 V 1.0
     */
    public String updateSelectReCalculateStaffsItem() {
        return ajax(Status.success, salaryAssignationService.updateSelectReCalculateStaffsItem(ids, itemID, formula));
    }

    public SalaryAssignation getSalaryAssignation() {
        return salaryAssignation;
    }

    public void setSalaryAssignation(SalaryAssignation salaryAssignation) {
        this.salaryAssignation = salaryAssignation;
    }

    public String getSalaryPeriodText() {
        return salaryPeriodText;
    }

    public void setSalaryPeriodText(String salaryPeriodText) {
        this.salaryPeriodText = salaryPeriodText;
    }

    public String getSalaryWageName() {
        return salaryWageName;
    }

    public void setSalaryWageName(String salaryWageName) {
        this.salaryWageName = salaryWageName;
    }

    public String getCompanyId() {
        return companyId;
    }

    public void setCompanyId(String companyId) {
        this.companyId = companyId;
    }

    public String getAssignId() {
        return assignId;
    }

    public void setAssignId(String assignId) {
        this.assignId = assignId;
    }

    public String getAssignStaffId() {
        return assignStaffId;
    }

    public void setAssignStaffId(String assignStaffId) {
        this.assignStaffId = assignStaffId;
    }

    public String getColumns() {
        return columns;
    }

    public void setColumns(String columns) {
        this.columns = columns;
    }

    public String getFormula() {
        return formula;
    }

    public void setFormula(String formula) {
        this.formula = formula;
    }

    public String getItemID() {
        return itemID;
    }

    public void setItemID(String itemID) {
        this.itemID = itemID;
    }

}
