package com.lingnet.hcm.action.check;

import java.util.Date;
import java.util.HashMap;

import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;

import com.lingnet.common.action.BaseAction;
import com.lingnet.hcm.entity.check.ChangeApply;
import com.lingnet.hcm.entity.person.BasicInformation;
import com.lingnet.qxgl.entity.QxUser;
import com.lingnet.util.JsonUtil;
import com.lingnet.util.LingUtil;
/**
 * 
 * @ClassName: ChangeApplyAction 
 * @Description: TODO 
 * @author 马晓鹏
 * @date 2017年7月16日 下午5:19:51 
 *
 */
@SuppressWarnings("serial")
public class ChangeApplyAction extends BaseAction {
    private String id;
    private String jsondata;
    private String changeno;
    private String state;
    private ChangeApply changeapp;
    
    /**
     * 打开列表页面
     */
    public String list(){
        return "list";
    }
    /**
     * 获得列表数据
     * @Title: jsonlist 
     * @return 
     * String 
     * @author 马晓鹏
     * @since 2017年7月16日 V 1.0
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public String jsonlist(){
         try {
             if(changeno==null||"".equals(changeno.trim())){
                 pager=this.findPagerByOrder(ChangeApply.class, pager, Order.desc("chackno"),
                         Restrictions.isNotNull("id"));
             }else{
                 pager=this.findPagerByOrder(ChangeApply.class, pager, Order.desc("chackno"),
                         Restrictions.eq("chackno", changeno));
             }
        } catch (Exception e) { 
            e.printStackTrace();
            HashMap result = new HashMap();
            result.put("data", "");
            result.put("total", pager.getTotalCount());
            String json = JsonUtil.Encode(result);
            return ajax(Status.success, json); 
        }

         HashMap result = new HashMap();
         result.put("data", pager.getResult());
         result.put("total", pager.getTotalCount());
         String json = JsonUtil.toJson(result);
         return ajax(Status.success, json); 
    }
    /**
     * 新增页面
     */
    public String add(){
        if(id==null||"".equals(id.trim())){
            changeapp=new ChangeApply();
        }else{ 
            changeapp=this.getBeanById(ChangeApply.class, id);
            if(changeapp.getState()>0){
                return "error";
            }
        }
        return "add";
    }
    /**
     * 保存
     */
    public String saveOrUpdate(){ 
        changeapp=JsonUtil.toObject(jsondata, ChangeApply.class);
        String jobnumber=LingUtil.userName();
        ChangeApply changeold=this.getBeanByCriteria(ChangeApply.class,
                Restrictions.eq("month", changeapp.getMonth()),
                Restrictions.eq("day", changeapp.getDay()),
                Restrictions.eq("userid",jobnumber));
        if(changeold!=null){
            return ajax(Status.success,"您今天的考勤已经申请修改过了哦"); 
        }
        changeapp.setState(0);
        if(changeapp.getId()==null||"".equals(changeapp.getId().trim())){ 
            String username=LingUtil.userName();
            changeapp.setUserid(username);
            changeapp.setUdate(new Date());
            BasicInformation basic=this.getBeanByCriteria(BasicInformation.class, 
                    Restrictions.or(Restrictions.eq("jobNumber", username), Restrictions.eq("practiceNum", username)));
            if(basic!=null){
                changeapp.setUsername(basic.getName());
                changeapp.setJobnumner(username);
                changeapp.setChackno(basic.getCheckNo());;
            }
            try { 
                this.save(changeapp);
            } catch (Exception e) {
                return ajax(Status.success,"操作失败"); 
            }
        }else{
            try { 
                this.update(changeapp);
            } catch (Exception e) {
                return ajax(Status.success,"操作失败"); 
            }
        }
        return ajax(Status.success,"操作成功"); 
    }
    /**
     * 审核
     * @Title: apply 
     * @return 
     * String 
     * @author 马晓鹏
     * @since 2017年7月16日 V 1.0
     */
    public String apply(){
        if(id==null||"".equals(id.trim())){
            return ajax(Status.success,"数据传输错误，请重新操作");
        } 
        changeapp=this.getBeanById(ChangeApply.class, id);
        QxUser userinfo=LingUtil.userinfo();
        changeapp.setAppman(userinfo.getUsername());
        changeapp.setAppdate(new Date());
        changeapp.setApplyname(userinfo.getName());
        try {
            changeapp.setState(Integer.parseInt(state));
        } catch (Exception e) {
            return ajax(Status.success,"审核未成功");
        }
        this.update(changeapp);
        return ajax(Status.success,"审核成功");
    }
    /**
     * 删除数据
     * @Title: remove 
     * @return 
     * String 
     * @author 马晓鹏
     * @since 2017年7月16日 V 1.0
     */
    public String remove(){
        if(id==null||"".equals(id.trim())){
            return ajax(Status.success,"数据传输错误，请重新操作");
        }
        try {
            this.deleteByCriteria(ChangeApply.class, Restrictions.eq("id", id));
        } catch (Exception e) { 
            return ajax(Status.success,"删除失败");
        }
        return ajax(Status.success,"删除成功");
    }
    public String getId() {
        return id;
    }
    public void setId(String id) {
        this.id = id;
    }
    public String getJsondata() {
        return jsondata;
    }
    public void setJsondata(String jsondata) {
        this.jsondata = jsondata;
    }
    public String getChangeno() {
        return changeno;
    }
    public void setChangeno(String changeno) {
        this.changeno = changeno;
    }
    public String getState() {
        return state;
    }
    public void setState(String state) {
        this.state = state;
    }
    public ChangeApply getChangeapp() {
        return changeapp;
    }
    public void setChangeapp(ChangeApply changeapp) {
        this.changeapp = changeapp;
    }
    
    
}
