package com.lingnet.hcm.action.empdata;

import javax.annotation.Resource;

import org.apache.commons.lang.StringUtils;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Controller;

import com.lingnet.common.action.BaseAction;
import com.lingnet.common.action.BaseAction.Status;
import com.lingnet.hcm.entity.basic.TableColumInfo;
import com.lingnet.hcm.entity.check.CkContent;
import com.lingnet.hcm.entity.person.BasicInformation;
import com.lingnet.hcm.entity.person.Education;
import com.lingnet.hcm.service.empdata.EducationService;
import com.lingnet.hcm.service.personnel.PersonnelService;
import com.lingnet.hcm.service.personnel.PtJobService;
import com.lingnet.qxgl.entity.JcDictionary;
import com.lingnet.util.JsonUtil;

/**
 * 
 * @ClassName: DepartureAction 
 * @Description: 教育经历Action 
 * @author zrl
 * @date 2017年3月10日 上午10:56:46 
 *
 */
public class EduRecordAction extends BaseAction{
	private static final long serialVersionUID = -207409378802570789L;
	private String flag;//标志位
    private String formdata;
    
    private BasicInformation info;
    private Education edu;
    @Resource(name="educationService")
    private EducationService educationService;
    
    /**
     * 列表页面
     */
    public String list(){
        return LIST;
    }
    /**
     * 列获取数据
     */
    public String getListData() {
        return ajax(Status.success, JsonUtil.Encode(educationService.getListData(pager,searchData)));
    }
    
    /**
     * 添加页面
     */
    public String add(){
    	edu=this.getBeanByCriteria(Education.class, Restrictions.eq("id", id));
    	String jobNumber="";
    	if(edu!=null){
    		jobNumber=edu.getJobNumber();
    	}
    	info=this.getBeanByCriteria(BasicInformation.class, Restrictions.eq("jobNumber", jobNumber));
        return "add";
    }

    public String saveOrUpdate(){
        if(formdata==null||formdata==""){
            return ajax(Status.success,"数据错误请联系管理员!");
        }else{
            edu=JsonUtil.toObject(formdata, Education.class);
        } 
        try { 
            if(edu.getId()==null||"".equals(edu.getId().trim())){
                this.save(edu);
            }else{
            	Education oldInfo=this.getBeanByCriteria(Education.class, Restrictions.eq("id", edu.getId()));
            	if (oldInfo == null) {
                    throw new Exception("该条记录不存在");
                }
            	oldInfo.copyFrom(edu);
                this.update(oldInfo);
            }
        } catch (Exception e) {
            return ajax(Status.success,"保存/修改失败");
        }
        return ajax(Status.success,"success");
    } 

    
    /**
     * 删除方法
     * @Title: remove 
     * @return 
     * String 
     * @author zrl
     * @since 2017年3月8日 V 1.0
     */
    public String remove() {
    	if (ids != null && !"".equals(ids)){
    		String[] idArrs = ids.split(",");
    		try {
    			educationService.delete(Education.class, idArrs);
            } catch (Exception e) {
                e.printStackTrace();
            }
    	}
        return ajax(Status.success, "success");
    }
   //**********************set/get**********************//
	public String getFlag() {
		return flag;
	}

	public void setFlag(String flag) {
		this.flag = flag;
	}
	public String getFormdata() {
		return formdata;
	}
	public void setFormdata(String formdata) {
		this.formdata = formdata;
	}
	public BasicInformation getInfo() {
		return info;
	}
	public void setInfo(BasicInformation info) {
		this.info = info;
	}
	public Education getEdu() {
		return edu;
	}
	public void setEdu(Education edu) {
		this.edu = edu;
	}
    

}
